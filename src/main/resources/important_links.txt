//Dataset files and description
http://stat-computing.org/dataexpo/2009/the-data.html
https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/
https://databricks.com/blog/2015/01/21/random-forests-and-boosting-in-mllib.html
https://community.hortonworks.com/articles/53903/spark-machine-learning-pipeline-by-example.html
https://www.cetic.be/IMG/pdf/mlwithspark.pdf
http://www.business-science.io/business/2017/10/16/sales_backorder_prediction.html

- Spark MLIB

//VARIAVEIS

// 1 - Primeira transformação dos dados

Month	1-12
DayofMonth	1-31
DayOfWeek	1 (Monday) - 7 (Sunday)

DepTime	actual departure time (local, hhmm)
CRSDepTime	scheduled departure time (local, hhmm)
DepDelay	departure delay, in minutes


CRSArrTime	scheduled arrival time (local, hhmm)
UniqueCarrier	unique carrier code
CRSElapsedTime	in minutes
ArrDelay	arrival delay, in minutes

Origin	origin IATA airport code
Dest	destination IATA airport code
Distance	in miles

TaxiOut	taxi out time in minutes
Cancelled	was the flight cancelled?
CancellationCode	reason for cancellation (A = carrier, B = weather, C = NAS, D = security)

// 2 - Segunda transformação dos dados
- tirar os voos que foram cancelados
- tirar o ano dos voos
- tentar não convergir para mínimos ou máximos locais




//NOT BE USED
ArrTime
ActualElapsedTime
AirTime
TaxiIn
Diverted
CarrierDelay
WeatherDelay
NASDelay
SecurityDelay
LateAircraftDelay


//mysql

select * from `2008` limit 1

SELECT DATE("2013-12-31 12:45:00")

/*Requirement: All the order by columns should be Int and DepTime not have "NA" values* and ArrDelay should be without "NA" too*/

select
Year,Month,DayOfMonth,DayOfWeek,DepTime,ArrDelay
FROM `2008` where TailNum = "N712SW" ORDER BY Year,Month,DayOfMonth,DepTime ASC limit 10;

delete FROM `2008` WHERE ArrDelay = "NA"

select count(DISTINCT TailNum) from (select * from `2008`LIMIT 100000) as tmp



select
    *,
    CASE
        WHEN @prev IS NULL then 0
        WHEN @prev > 0 THEN 1 ELSE 0
    END as previousWasDelayed,
    @prev as previous_ArrDelay,
    @prev := e.ArrDelay as current_ArrDelay
    /*CASE
        WHEN e.ArrDelay is not null then 0 else 1 end*/
from
    (
        select
            @prev := null
    ) as i,
    `2008` as e
WHERE TailNum = "N712SW"
order by
    e.Year,e.Month,e.DayOfMonth,e.DepTime ASC;



select DISTINCT ArrDelay from (select ArrDelay,count(*) as TotalPerDelay FROM `2008` GROUP BY ArrDelay)as Tmp


SELECT *,
       ArrDelay*1.0/(SELECT SUM(ArrDelay) FROM `2008`) AS Probability
    FROM `2008`
    GROUP BY ArrDelay DESC



select * from `2008` LEFT JOIN  (select ArrDelay, count(ArrDelay)/6855029 as Probability from `2008` GROUP BY ArrDelay)AS Tmp on `2008`.ArrDelay=Tmp.ArrDelay

select SUM(ArrDelay) as sum

select count(*) FROM `2008` WHERE ArrDelay=2461
SELECT count(*) from `2008`